


					APUNTES DE GIT



Configuración global de git:

1. Cambiar el nombre de usuario global
git config --global user.name "Tu Nuevo Nombre de Usuario"    

2. Cambiar el correo electrónico global
git config --global user.email "tunuevoemail@ejemplo.com"    

3. Cambiar el nombre de la rama principal por defecto
git config --global init.defaultBranch main    

4. Para que Git confíe automáticamente en todos los repositorios dentro de tu carpeta de usuario en Windows
git config --global --add safe.directory "%USERPROFILE%"

5. Para que Git confíe automáticamente en un repositorio de un directorio específico
git config --global --add safe.directory "C:/Users/isidro.carbajo/apuntes-git"

6. Crear alias para ejecutar comandos
git config --global alias.<alias> '<comando>'

-----
Si quieres verificar que los cambios se han aplicado correctamente, puedes usar:
git config --global --list    

Inicializar un repositorio:
git init

Añadir los archivos al área de preparación de git:
git add "Apuntes git.txt"
git add .

Hacer una instantania de lo que se ha añadido al área de preparación de git:
git commit -m "Este es mi primer commit"

Añadir todos los archivos al área de preparación y Hacer una instantania de lo que se ha añadido al área de preparación de git:
git commit -am "Tu mensaje de commit"

Verificar la existencia del remoto:
git remote -v

Listar las ramas del remoto:
git ls-remote --heads origin
git branch -r

Cambiarse a la rama:
git switch nombre-de-la-rama
git checkout nombre-de-la-rama

Crea una nueva rama y se cambia a ella:
git switch -c nombre-de-la-rama
git checkout -b nombre-de-la-rama

Ver el estado del área de preparación y trabajo de Git:
git status    

Ver el historial:
git log
Parámetros:
- `--oneline`: Muestra cada commit en una sola línea (hash corto + mensaje).
- `--graph`: Dibuja un gráfico ASCII del historial de ramas.
- `--decorate`: Muestra nombres de ramas y etiquetas junto a los commits.
- `--name-only`: Lista solo los nombres de archivos modificados.
- `--grep="texto"`: Filtra commits cuyo mensaje contiene cierto texto.

Ver todas las referencias del historial:
git reflog

Elimina el archivo del área de preparación:
git reset archivo.txt

Elimina todos los archivos del área de preparación:
git reset

Restaura el archivo del último commit al área de trabajo:
git restore archivo.txt
git checkout -- archivo.txt

Restaura todos los archivos al área de trabajo y elimina los archivos del área de preparación:
git reset --hard

Muestra las diferencias entre el área de trabajo y el área de presentación:
git diff

Muestra las diferencias entre el área de trabajo y el último commit:
git diff HEAD

Ver diferencias con formato resumido:
git diff --stat

Ver diferencias de un archivo:
git diff HEAD -- ruta/del/archivo.txt

Sintaxis tag:
git tag [opciones] [nombre-etiqueta] [commit]
Opciones:
-l Lista los tag
-d <nombre-del-tag> Borra el tag

Listar las ramas locales del repositorio:
git branch
Parámetros:
Muestra todas las ramas, tanto locales como remotas.
1. -a o --all
Muestra solo las ramas remotas.
2. -r o --remotes
Crea una nueva rama con el nombre especificado.
3. branch <nombre>
Elimina una rama local (solo si ya ha sido fusionada).
4. -d <nombre> o --delete <nombre>
Elimina una rama local forzadamente, aunque no haya sido fusionada.
5. -D <nombre>
Renombra la rama actual.
6. -m <nombre> o --move <nombre>
Renombra una rama específica.
7. -m <viejo> <nuevo>
Muestra las ramas que contienen un commit específico.
8. --contains <commit>
Lista las ramas que han sido completamente fusionadas, con la rama actual.
9. --merged
Lista las ramas que no han sido fusionadas con la rama actual.
10. --no-merged

